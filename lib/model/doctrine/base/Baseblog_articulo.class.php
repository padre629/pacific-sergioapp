<?php

/**
 * Baseblog_articulo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $titulo
 * @property clob $contenido
 * @property Doctrine_Collection $Comentarios
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getTitulo()      Returns the current record's "titulo" value
 * @method clob                getContenido()   Returns the current record's "contenido" value
 * @method Doctrine_Collection getComentarios() Returns the current record's "Comentarios" collection
 * @method blog_articulo       setId()          Sets the current record's "id" value
 * @method blog_articulo       setTitulo()      Sets the current record's "titulo" value
 * @method blog_articulo       setContenido()   Sets the current record's "contenido" value
 * @method blog_articulo       setComentarios() Sets the current record's "Comentarios" collection
 * 
 * @package    pacific-sergioapp
 * @subpackage model
 * @author     Sergio A Guzman (sagg629@hotmail.com)
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseblog_articulo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('blog_articulo');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('titulo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('contenido', 'clob', null, array(
             'type' => 'clob',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('blog_comentario as Comentarios', array(
             'local' => 'id',
             'foreign' => 'blog_articulo_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}